// TODO build the spigot server jars automatically as needed
// TODO create task to setup workspace
// TODO make sure the clean task cleans everything properly
// TODO make sure all builds can be cached where possible
// TODO clean up dependency management

wrapper {
  gradleVersion = "6.5"
  setDistributionType(Wrapper.DistributionType.ALL)
}

buildscript {
  repositories {
    jcenter()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.jengelman.gradle.plugins:shadow:6.0.0"
    classpath "de.undercouch:gradle-download-task:3.4.2"
    classpath "com.sarhanm:gradle-versioner:2.4.0"
  }
}

repositories {
  flatDir {
    dirs "lib"
  }
}

ext {
  magicspellsData = new MSConfig()
}

class MSConfig {
  String libDir = "lib"

  // Resource retrieving
  def resourceNcpUrl = "https://ci.md-5.net/job/NoCheatPlus/lastSuccessfulBuild/artifact/target/NoCheatPlus.jar"

}

static def downloadFile(File file, URL url) {
  if (!file.exists()) {
    url.withInputStream{ i -> file.withOutputStream{ it << i }}
  }
}

// FIXME this should be setup as a task instead of a method running on configuration time
// Ensures resource availability
def magicspellsGetResources() {
  println "Running the get resources phase"

  File libFolder = project.file(project.ext.magicspellsData.libDir)

  // Get NoCheatPlus
  downloadFile(new File(libFolder, "NoCheatPlus.jar"), new URL(project.ext.magicspellsData.resourceNcpUrl))

  println "Finished running the get resources phase"
}

afterEvaluate {
  magicspellsGetResources()
}

// FIXME this should not be run at configuration time
task downloadDependencies() {
    group = "Setup"
    doFirst {
        magicspellsGetResources()
    }
}

subprojects {
  apply plugin: "java"
  apply plugin: "com.github.johnrengelman.shadow"
  apply plugin: "maven-publish"

  repositories {
    flatDir {
      dirs(rootDir.path + "/lib")
    }

    jcenter()
    mavenCentral()

    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://repo.codemc.org/repository/maven-public" }
    maven { url "https://cdn.rawgit.com/Rayzr522/maven-repo/master/" }
    maven { url "https://maven.sk89q.com/repo/" }
    maven { url "https://jitpack.io" }
  }

  it.version = "4.0-Beta-9"
  
  processResources {
    expand(["version": "4.0-Beta-9"])
  }

  shadowJar {
    configurations = [project.configurations.shadow]
  }

}
